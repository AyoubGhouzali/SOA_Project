graph TB
    subgraph PRESENTATION["üé® Presentation Layer"]
        REST["REST Controllers<br/>‚Ä¢ TicketController<br/>‚Ä¢ OrderController"]
        GRAPHQL["GraphQL Resolvers<br/>‚Ä¢ TicketResolver"]
    end
    
    subgraph APPLICATION["‚öôÔ∏è Application Layer"]
        USECASE["Use Cases<br/>‚Ä¢ PurchaseTicketUseCase<br/>‚Ä¢ ValidateTicketUseCase"]
        COMMAND["Commands<br/>‚Ä¢ PurchaseTicketCommand<br/>‚Ä¢ ValidateTicketCommand"]
        DTO["DTOs<br/>‚Ä¢ TicketDTO<br/>‚Ä¢ OrderDTO"]
    end
    
    subgraph DOMAIN["üíé Domain Layer"]
        ENTITY["Entities & Aggregates<br/>‚Ä¢ Ticket<br/>‚Ä¢ Order"]
        VO["Value Objects<br/>‚Ä¢ TicketId<br/>‚Ä¢ Money<br/>‚Ä¢ ValidityPeriod"]
        SERVICE["Domain Services<br/>‚Ä¢ TicketPricingService<br/>‚Ä¢ TicketValidationService"]
        REPO["Repository Interfaces<br/>‚Ä¢ TicketRepository<br/>‚Ä¢ OrderRepository"]
        EVENT["Domain Events<br/>‚Ä¢ TicketPurchased<br/>‚Ä¢ TicketValidated"]
    end
    
    subgraph INFRASTRUCTURE["üîß Infrastructure Layer"]
        PERSIST["Persistence<br/>‚Ä¢ JpaTicketRepository<br/>‚Ä¢ JpaOrderRepository"]
        MSG["Messaging<br/>‚Ä¢ KafkaEventPublisher<br/>‚Ä¢ RabbitMQListener"]
        EXTERN["External Services<br/>‚Ä¢ StripePaymentAdapter<br/>‚Ä¢ GoogleMapsAdapter"]
    end
    
    REST --> USECASE
    GRAPHQL --> USECASE
    USECASE --> ENTITY
    USECASE --> SERVICE
    USECASE --> REPO
    ENTITY --> VO
    ENTITY --> EVENT
    PERSIST -.implements.-> REPO
    MSG -.publishes.-> EVENT
    
    classDef presentationStyle fill:#ffcccb,stroke:#d32f2f
    classDef applicationStyle fill:#c8e6c9,stroke:#388e3c
    classDef domainStyle fill:#bbdefb,stroke:#1976d2
    classDef infraStyle fill:#fff9c4,stroke:#f57f17
    
    class REST,GRAPHQL presentationStyle
    class USECASE,COMMAND,DTO applicationStyle
    class ENTITY,VO,SERVICE,REPO,EVENT domainStyle
    class PERSIST,MSG,EXTERN infraStyle